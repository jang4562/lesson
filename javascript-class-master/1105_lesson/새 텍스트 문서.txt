cd C:\gif\example\HS\javascript-class-master\1105_lesson

1. npm install -g express-generator 

2. cd my_server

3. experss -e

4. npm install  (모듈설치)

5. npm start (서버구동)


  127.0.0.1:3000


express 구조

bin 폴더 = 서버실행파일 = npm start
npde_modules 폴더 = 설치한 외부 모듈들을 모아놓은 장소

public 폴더 = images,javascripts,stylesheets 각각 img 파일 ,자바스크랩트 ,css파일들을 보관

routes 폴더 = 웹페이지를 표시해주고 서버에 내에서 특정 기능을 코드로 작성한 파일을 저장한다.

views 폴더 = 클라이언트에게 제공할 웹페이지(기본골격)을 저장하고있는 폴더

app.js 파일 = 서버관련 코드들이 모여 있는 파일
	      웹페이지에서 추가되면 해당 웹페이지를 구동시키는 		      route 폴더를 지정한다

package.json 파일 = 설치한 모듈들을 기록해놓은 파일

package-lock.json 파일 = 설치한 모듈들이 업데이트 되어도 이미 설치한 버전을 유지하도록 기록해놓은 파일

css,html 적용하기
css -> public -> stylesheets
html -> views -> 확장자 html을 ejs로 수정
routes 폴더 index 파일 열기 6번째줄 'index' 부분을 -> 'naverBox.ejs' (ejs없어도됨) 로수정
views 폴더에 naverBox 열어서 css위치 naverBox앞에 /stylesheets/ 붙이기 ex)/stylesheets/naverBox.css


자바스크립트 적용하기
routes 폴더에 index 파일 열기 
코드를 추가하고 ex) now = new Date();
{ Express } 부분을 수정 ex) { date : print_date }
views 폴더 에 naverBox.ejs 파일을열어서 넣고자 하는 위치에 <%= date %> 를추가
ex) 167행에 <div class="box3-inner2"><%= date %></div> (div)사이에 추가


npm install mysql --save (데이터베이스 마이SQL 연동설치)
-> routes 폴더에 index.js파일에 상단 mysql = require('mysql'); 명령어 추가 
// [mysql연동_1] mysql 모듈을 로드한다
// [mysql연동_2] 데이터베이스 연결 pool을 만든다.
 * [mysql연동_3] 데이터베이스 연결 pool을 만들기 위한 정보들
 * host : 데이터베이스 서버의 주소 (자기 컴퓨터라면 127.0.0.1 혹은 localhost)
 * port : 데이터베이스 서비스를 위한 데이터가 입출력되는 통로의 번호, 기본 3306
 * user : 데이터베이스 서버에 접속하기 위한 아이디 (root로 접속하지 않는다)
 * password : 데이터베이스 서버에 접속하기 위한 비밀번호
 * database : 자료를 담고 있는 테이블을 모아놓은 데이터베이스 이름
 * connectionLimit : 데이터베이스 연결 개수 제한값
 * waitForConnetion : 데이터베이스 연결을 기다리는 것을 허용하는지 여부
 * [mysql연동_4] 데이터베이스 풀에서 데이터베이스 서버와의 연결을 가져온다. 
 * getConnection() 함수를 활용한다.
 * getConnection() 함수는 매개변수로 콜백함수를 받는다.
 * 
 * 콜백함수는 작업이 완료된 후 수행하는 함수를 말한다.
 * 
 * 따라서 데이터베이스 서버와의연결을 수행하고 콜백함수가 실행된다.
 * [mysql연동_5] 콜백함수에서 sql문을 작성한다. 
 * 콜백함수의 매개변수)
 * err : 데이터베이스 연결 도중에 오류가 발생했을 경우, 에러내용이 저장
 * connection : 데이터베이스 연결 후 sql문을 실행하기 위한 객체
 //[mysql연동_6] 데이터베이스 연결중 오류가 발생했다면
 // 현재의 연결을 해제한다
 // 오류 내용을 콘솔화면에 출력하고 프로그램을 종료한다.
 //[mysql연동_7] 데이터베이스 연결 후 sql문을 실행한다.
 // connetion.query() 함수를 활용하여 sql문을 실행한다.
 // connetion.query() 함수의 매개변수는 sql문을 작성한 문자열과,
 // sql문을 실행후 결과들을 처리하기 위한 롤백함수
/**[mysql연동_8] sql문을 실행 후에 처리를 위한 콜백함수
 * err : sql문의 문법오류 및 기타 오류 등으로 sql문이 실행되지 않을경우
 *       에러내용들이 저장되는 변수
 * rows : sql은 실행된 결과물