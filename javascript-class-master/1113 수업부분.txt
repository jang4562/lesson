1). 기능함수 안에 웹페이지를 표시할 데이터를 저장한다.

2). 기능함수에서 웹페에지를 조합할 때 표시할 데이터를 전달하자.
조합할때 데이터를 전달하려면, res.render 함수의 두번째 매개변수로 전달한다.
데이터는 오브젝트 형으로 만들어서 전달해야 한다.

오브젝트형)
오브젝트형은 { 데이터 이름 : 데이터값 , 데이터 이름2 : 데이터값2 ,  ...} 데이터를 표현하는 방식

3). 2).에서 전달받은 데이터 (title : 'Express', hello : print_hello)를 표시할 위츠를 main.ejs에 표시하려면,
<%= 오브젝트 안의 데이터 이름(title, hello) %> 




(웹페이지를 표시하는 기능함수에게 특정한 데이터를 전달하는 방법)
표시할 페이지의 수가 3개라면, 각 페이지를 표시하는 기능함수가 3개 필요하다

그러면 100,000개 페이지를 표시하려면, 기능함수가 100,000개 필요하다

1개의 페이지에서 설정 부분을 사용자의 요청에 따라 교체하여 표시하자.
주소의 경우를 구분할 수 있는 숫자 혹은 문자열(ID, 제품번호)등을 추가하여 서버에 요청하면,

서버는 구분할 수 있는 데이터(숫자 혹은 문자열)를 확인하고, 그에 맞는 데이터(제품명, 제품사진)들을

웹페이지에 조합하여 표시한다.

1.) 기능 함수가 주소에 추가된 데이터를 읽을 수 있도록 수정한다.

주소 : http://127.0.0.1/board/3000

여기서 3000은 전달할 제품의 번호

기능함수는 제품 번호 부분을 따로 저장해야 한다. 기능함수가 웹페이지에 접속한 주소와 제품번호를 구분하려면,

get함수에서 접속하는 주소부분(첫번째 매개변수)에 ':데이터이름' 형태로 설정해야 한다.

서버는 접속한 주소로 기능함수를 구분해서 실행한다. 그런데 주소에서 어느부분은 기능함수를 실행하기 위한 주소이고,
어느부분은 사용자가 전달한 데이터 부분인 지 구분할 필요가 있다.

따라서 get함수의 주소부분('/:number')에 콜론(:)과 데이터 이름을 표시한다.




(웹페이지의요청메시지에 식별자 값을 추가하여 서버(기능함수)에게 보내는 방법)

주소에 식별자를 활용해서 보내는 방법은 보안에 취약하므로 중요한 정보를 서버(기능함수)에 보내기 어렵다.
웹브라우저에서 보기 어려운 웹페이지 요청메시지에 식별자(데이터)값을 추가해서 보내면 상대적으로 정보의 유출을
방지할 수 있다.

주소창이 아닌 별도의 양식을 만들어 데이터를 전달해야 하는데,HTML의 <form>태그를 활용

<form>태그는 데이터를 추가한 요청 메시지를 보낼때 어느 주소로 보내야 하는지 명시

메시지를 받는 주소는 action 속성 뒤에 적는다 예시에서 /singup으로 입력한 부분은 http://127.0.0.1/signup 으로 입력한것과 같다

둘째로 meshod 속성에 'POST' 값을 준다. 웹페이지 요청 메시지에 데이터를 실어 보내는 방식을 'POST' 방식이라하므로,
속성을 꼭 입력해야 한다.




(어떤 값을 보낼 것인가?)

<form> 태그안에 <input> 태그를 활용해서 사용자로 부터 값을입력받을 수 있는 양식을 만든다.

사용자가 <form>의 <input>태그 안에 작성한 내용들은 오브젝트 형태로 정리되어 form의 action속성에서 작성한
주소로 메시지에 실려 전달 된다.

input태그 안에 입력한 값들은 예시와 같은 형태로 구성된다.

{ myid : , pwd : , repwd : , user_gender : "남성" }